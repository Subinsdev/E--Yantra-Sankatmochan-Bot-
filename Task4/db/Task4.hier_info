|custom_xbee_test
serial <= XBEE:inst.O_TX_SERIAL
inp_clk => pll_1:inst3.inclk0
c_clk => Color_Sensor:inst9.c_clk
out_s2 <= Color_Sensor:inst9.out_s2
out_s3 <= Color_Sensor:inst9.out_s3


|custom_xbee_test|XBEE:inst
CLOCK => r_data_bits[0].CLK
CLOCK => r_data_bits[1].CLK
CLOCK => r_data_bits[2].CLK
CLOCK => r_data_bits[3].CLK
CLOCK => r_data_bits[4].CLK
CLOCK => r_data_bits[5].CLK
CLOCK => r_data_bits[6].CLK
CLOCK => r_data_bits[7].CLK
CLOCK => next_limit[0].CLK
CLOCK => next_limit[1].CLK
CLOCK => next_limit[2].CLK
CLOCK => next_limit[3].CLK
CLOCK => next[0].CLK
CLOCK => next[1].CLK
CLOCK => next[2].CLK
CLOCK => next[3].CLK
CLOCK => r_TX_DONE.CLK
CLOCK => r_TX_SERIAL.CLK
CLOCK => r_bit_index[0].CLK
CLOCK => r_bit_index[1].CLK
CLOCK => r_bit_index[2].CLK
CLOCK => r_clock_count[0].CLK
CLOCK => r_clock_count[1].CLK
CLOCK => r_clock_count[2].CLK
CLOCK => r_clock_count[3].CLK
CLOCK => r_clock_count[4].CLK
CLOCK => r_clock_count[5].CLK
CLOCK => r_clock_count[6].CLK
CLOCK => r_clock_count[7].CLK
CLOCK => r_clock_count[8].CLK
CLOCK => r_state~1.DATAIN
detect => r_state.OUTPUTSELECT
detect => r_state.OUTPUTSELECT
detect => next.OUTPUTSELECT
detect => next.OUTPUTSELECT
detect => next.OUTPUTSELECT
detect => next.OUTPUTSELECT
detect => next_limit.OUTPUTSELECT
detect => next_limit.OUTPUTSELECT
detect => next_limit.OUTPUTSELECT
detect => next_limit.OUTPUTSELECT
color[0] => Equal7.IN0
color[0] => Equal8.IN31
color[1] => Equal7.IN31
color[1] => Equal8.IN0
color[2] => Equal7.IN30
color[2] => Equal8.IN30
nodex => next_limit.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => r_data_bits.DATAB
nodex => next_limit.DATAB
O_TX_SERIAL <= r_TX_SERIAL.DB_MAX_OUTPUT_PORT_TYPE
O_TX_DONE <= r_TX_DONE.DB_MAX_OUTPUT_PORT_TYPE


|custom_xbee_test|pll_1:inst3
inclk0 => sub_wire4[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk


|custom_xbee_test|pll_1:inst3|altpll:altpll_component
inclk[0] => pll_1_altpll:auto_generated.inclk[0]
inclk[1] => pll_1_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|custom_xbee_test|pll_1:inst3|altpll:altpll_component|pll_1_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|custom_xbee_test|detect_change:inst4
clk => r_nodex.CLK
clk => r_color[0].CLK
clk => r_color[1].CLK
clk => r_color[2].CLK
clk => detect~reg0.CLK
clk => r_state~2.DATAIN
color[0] => Equal0.IN2
color[0] => s_color[0].DATAIN
color[0] => Equal1.IN0
color[0] => Equal2.IN31
color[0] => Equal3.IN1
color[0] => r_color[0].DATAIN
color[1] => Equal0.IN1
color[1] => s_color[1].DATAIN
color[1] => Equal1.IN31
color[1] => Equal2.IN0
color[1] => Equal3.IN0
color[1] => r_color[1].DATAIN
color[2] => Equal0.IN0
color[2] => s_color[2].DATAIN
color[2] => Equal1.IN30
color[2] => Equal2.IN30
color[2] => Equal3.IN31
color[2] => r_color[2].DATAIN
data_set_done => always0.IN1
data_set_done => always0.IN1
detect <= detect~reg0.DB_MAX_OUTPUT_PORT_TYPE
s_color[0] <= color[0].DB_MAX_OUTPUT_PORT_TYPE
s_color[1] <= color[1].DB_MAX_OUTPUT_PORT_TYPE
s_color[2] <= color[2].DB_MAX_OUTPUT_PORT_TYPE
s_nodex <= <GND>


|custom_xbee_test|Color_Sensor:inst9
clk => out_color[0].CLK
clk => out_color[1].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => s3.CLK
clk => s2.CLK
clk => r_state~1.DATAIN
c_clk => blue_counter[0].CLK
c_clk => blue_counter[1].CLK
c_clk => blue_counter[2].CLK
c_clk => blue_counter[3].CLK
c_clk => blue_counter[4].CLK
c_clk => blue_counter[5].CLK
c_clk => blue_counter[6].CLK
c_clk => blue_counter[7].CLK
c_clk => blue_counter[8].CLK
c_clk => blue_counter[9].CLK
c_clk => green_counter[0].CLK
c_clk => green_counter[1].CLK
c_clk => green_counter[2].CLK
c_clk => green_counter[3].CLK
c_clk => green_counter[4].CLK
c_clk => green_counter[5].CLK
c_clk => green_counter[6].CLK
c_clk => green_counter[7].CLK
c_clk => green_counter[8].CLK
c_clk => green_counter[9].CLK
c_clk => red_counter[0].CLK
c_clk => red_counter[1].CLK
c_clk => red_counter[2].CLK
c_clk => red_counter[3].CLK
c_clk => red_counter[4].CLK
c_clk => red_counter[5].CLK
c_clk => red_counter[6].CLK
c_clk => red_counter[7].CLK
c_clk => red_counter[8].CLK
c_clk => red_counter[9].CLK
color[0] <= out_color[0].DB_MAX_OUTPUT_PORT_TYPE
color[1] <= out_color[1].DB_MAX_OUTPUT_PORT_TYPE
color[2] <= <GND>
out_s2 <= s2.DB_MAX_OUTPUT_PORT_TYPE
out_s3 <= s3.DB_MAX_OUTPUT_PORT_TYPE


